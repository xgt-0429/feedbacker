<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.feedbacker.mapper.PostsMapper">
  <resultMap id="BaseResultMap" type="com.example.feedbacker.entity.Posts">
    <!--@mbg.generated-->
    <!--@Table posts-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="author_id" jdbcType="BIGINT" property="authorId" />
    <result column="circle_id" jdbcType="BIGINT" property="circleId" />
    <result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, author_id, circle_id, merchant_id, title, content, score, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from posts
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from posts
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.feedbacker.entity.Posts" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into posts (author_id, circle_id, merchant_id, 
      title, content, score, 
      created_at, updated_at)
    values (#{authorId,jdbcType=BIGINT}, #{circleId,jdbcType=BIGINT}, #{merchantId,jdbcType=BIGINT}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{score,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.feedbacker.entity.Posts" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into posts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="circleId != null">
        circle_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=BIGINT},
      </if>
      <if test="circleId != null">
        #{circleId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.feedbacker.entity.Posts">
    <!--@mbg.generated-->
    update posts
    <set>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=BIGINT},
      </if>
      <if test="circleId != null">
        circle_id = #{circleId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.feedbacker.entity.Posts">
    <!--@mbg.generated-->
    update posts
    set author_id = #{authorId,jdbcType=BIGINT},
      circle_id = #{circleId,jdbcType=BIGINT},
      merchant_id = #{merchantId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      score = #{score,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>