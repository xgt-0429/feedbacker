<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.feedbacker.mapper.CircleMapper">
  <resultMap id="BaseResultMap" type="com.example.feedbacker.entity.Circle">
    <!--@mbg.generated-->
    <!--@Table circles-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, owner_id, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from circles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from circles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.feedbacker.entity.Circle" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into circles (`name`, owner_id, created_at, description
      )
    values (#{name,jdbcType=VARCHAR}, #{ownerId,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.feedbacker.entity.Circle" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into circles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.feedbacker.entity.Circle">
    <!--@mbg.generated-->
    update circles
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.feedbacker.entity.Circle">
    <!--@mbg.generated-->
    update circles
    set `name` = #{name,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 按主键查 -->
  <select id="findById"
          parameterType="long"
          resultMap="BaseResultMap">
    SELECT id, name, description, owner_id, created_at
    FROM circles
    WHERE id = #{id}
  </select>

  <!-- 按拥有者查 -->
  <select id="findByOwner"
          parameterType="long"
          resultMap="BaseResultMap">
    SELECT id, name, description, owner_id, created_at
    FROM circles
    WHERE owner_id = #{ownerId}
    ORDER BY created_at DESC
  </select>

</mapper>